# Generated by Django 2.2.24 on 2025-02-04 17:52

from django.db import migrations
import phonenumbers
from django.db.models import Value, CharField, Case, When, F
from phonenumbers import parse as parse_phone, is_valid_number, format_number, NumberParseException


def normalize_phone_numbers(apps, schema_editor):
    Flat = apps.get_model('property', 'Flat')

    def format_or_none(phone_number):
        try:
            parsed_number = parse_phone(phone_number, "RU")
            if is_valid_number(parsed_number):
                return format_number(parsed_number, phonenumbers.PhoneNumberFormat.E164)
            else:
                return None
        except NumberParseException:
            return None

    # Обновляем все объекты за один запрос
    Flat.objects.annotate(
        formatted_phone=Case(
            When(owners_phonenumber__isnull=False, then=Value(format_or_none(F('owners_phonenumber')))),
            default=None,
            output_field=CharField()
        )
    ).update(owner_pure_phone=F('formatted_phone'))


class Migration(migrations.Migration):

    dependencies = [
        ('property', '0008_auto_20250204_2044'),
    ]

    operations = [
        migrations.RunPython(normalize_phone_numbers)
    ]
